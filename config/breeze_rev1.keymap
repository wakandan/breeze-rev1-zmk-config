/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Ref: https://zmkfirmware.dev/docs/codes/
            // ---  MAIN  -----------------------------------------------------------------------------------------------------------------------
            // |    ESC    |     1     |     2     |     3      |      4      |      5     |                           |      6      |      7     |      8      |      9     |     0    |    BSPC    | |    -/_    |     =/+     |    GRAVE    |
            // |    TAB    |     Q     |     W     |     E      |      R      |      T     |                           |      Y      |      U     |      I      |      O     |     P    |    DEL     | |     \     |      [      |      ]      |
            // |   LCTRL   |     A     |     S     |     D      |      F      |      G     |                           |      H      |      J     |      K      |      L     |     ;    |     '      | |           |      UP     |             |
            // |   SHIFT   |     Z     |     X     |     C      |      V      |      B     |                           |      N      |      M     |      ,      |      .     |     /    |   RSHIFT   | |     L     |      DN     |      R      |
            //                                     |   NUMPAD   |     LALT    |    LCMD    |   SPACE    |  |   ENTER   |   FUNCTION  |  MACOS APP |  MACOS LANG |

            bindings = <
&kp ESC           &kp N1        &kp N2        &kp N3     &kp N4     &kp N5  &kp N6  &kp N7             &kp N8     &kp N9   &kp N0    &kp MINUS      &kp K_MUTE  &kp BACKSPACE  &trans
&kp TAB           &kp Q         &kp W         &kp E      &kp R      &kp T   &kp Y   &kp U              &kp I      &kp O    &kp P     &kp BACKSPACE  &kp ENTER   &kp ENTER      &trans
&kp CAPSLOCK      &kp A         &kp S         &kp D      &kp F      &kp G   &kp H   &kp J              &kp K      &kp L    &kp SEMI  &kp APOS       &kp UP
&kp LSHFT         &kp Z         &kp X         &kp C      &kp V      &kp B   &kp N   &kp M              &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT     &kp LEFT    &kp DOWN       &kp RIGHT
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &kp SPACE  &kp SPACE  &mo 1   &mo 2   &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbols {
            // ---  FUNCTION  -------------------------------------------------------------------------------------------------------------------
            // | BT Clear  |  BT Prev  |  BT Next  |            |             |            |                           |             |            |             |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |            |     UP      |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    LEFT    |    DOWN     |   RIGHT    |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    MUTE    |  VOL DOWN   |   VOL UP   |          |            | |           |             |             |
            //                                     |            |             |            |            |  |           |             |            |             |

            bindings = <
&kp F1             &kp F2       &kp F3                &kp F4                    &kp F5                     &kp F6                 &kp F7        &kp F8                &kp F9                 &kp F10         &kp F11         &kp F12        &trans       &trans         &trans
&kp LG(TILDE)      &kp TILDE    &kp LEFT_BRACE        &kp RIGHT_BRACE           &kp PIPE                   &kp N0                 &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp C_AC_PRINT  &kp SCROLLLOCK  &kp C_PAUSE    &trans       &trans         &trans
&kp C_VOLUME_UP    &kp LG(TAB)  &kp LG(LEFT_BRACKET)  &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp LG(RIGHT_BRACKET)  &kp PLUS      &kp EQUAL             &kp UNDERSCORE         &kp INSERT      &kp HOME        &kp PAGE_UP    &kp PAGE_UP
&kp C_VOLUME_DOWN  &kp K_MUTE   &trans                &kp HOME                  &kp END                    &kp C_VOLUME_UP        &kp TILDE     &kp PIPE              &kp BACKSLASH          &kp DELETE      &kp END         &kp PAGE_DOWN  &kp HOME     &kp PAGE_DOWN  &kp END
&trans             &trans       &trans                &trans                    &kp ENTER                  &kp LA(BACKSPACE)      &trans        &trans
            >;
        };

        numbers {
            bindings = <
&kp GRAVE          &trans      &trans  &trans    &trans     &trans             &bt BT_SEL 0  &bt BT_SEL 1          &kp KP_NUMLOCK  &kp FSLH  &kp ASTERISK  &kp MINUS  &trans       &bt BT_CLR     &trans
&kp LG(TILDE)      &kp N6      &kp N7  &kp N8    &kp N9     &kp N0             &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp N7          &kp N8    &kp N9        &kp PLUS   &trans       &trans         &trans
&kp C_VOLUME_UP    &kp N1      &kp N2  &kp N3    &kp N4     &kp N5             &kp N6        &kp N7                &kp N4          &kp N5    &kp N6        &kp ENTER  &kp PAGE_UP
&kp C_VOLUME_DOWN  &kp K_MUTE  &trans  &kp HOME  &kp END    &kp C_VOLUME_UP    &kp TILDE     &kp PIPE              &kp N1          &kp N2    &kp N3        &kp RIGHT  &kp HOME     &kp PAGE_DOWN  &kp END
&trans             &trans      &trans  &trans    &kp ENTER  &kp LA(BACKSPACE)  &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans                    &trans                     &trans                 &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LEFT_BRACKET)  &kp LG(LS(LEFT_BRACKET))  &kp LS(LG(RIGHT_BRACKET))  &kp LG(RIGHT_BRACKET)  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT              &kp DOWN                  &kp UP                     &kp RIGHT              &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                &kp LC(LEFT_ARROW)        &kp LC(RIGHT)              &trans                 &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans
            >;
        };
    };
};
